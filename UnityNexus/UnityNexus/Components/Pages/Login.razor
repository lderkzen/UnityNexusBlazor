@implements IDisposable
@rendermode renderMode

<Button Disabled="@_requiresCookieConsent"
        Clicked="BeginSignIn"
        Size="Size.Large"
        Class="btn-discord"
        TextColor="TextColor.White">
    <i class="fab fa-discord"></i> Log in with Discord
 </Button>

@code {
    static IComponentRenderMode renderMode = new InteractiveServerRenderMode(prerender: false);

    private bool _requiresCookieConsent = true;

    [Inject] private ICookiePolicyService CookiePolicyService { get; set; }

    [Inject] private NavigationManager NavigationManager { get; set; }

    protected override async Task OnInitializedAsync()
    {
        CookiePolicyService.AcceptedCookiePolicy += AcceptedCookiePolicy;
        _requiresCookieConsent = await CookiePolicyService.CheckIfCookieConsentIsRequiredAsync();
        StateHasChanged();
    }

    private void BeginSignIn()
    {
        @* var options = new InteractiveRequestOptions
            {
                Interaction = InteractionType.SignIn,
                ReturnUrl = NavigationManager.Uri
            };
        options.TryAddAdditionalParameter("prompt", "none");
        NavigationManager.NavigateToLogin("authentication/login", options); *@
    }

    private void AcceptedCookiePolicy(object sender,
                                      EventArgs e)
    {
        _requiresCookieConsent = false;
        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        CookiePolicyService.AcceptedCookiePolicy -= AcceptedCookiePolicy;
    }
}
