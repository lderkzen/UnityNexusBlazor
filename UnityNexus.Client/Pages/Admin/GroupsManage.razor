@page "/admin/groups/manage"

<PageTitle>Manage Groups | UnityNexus</PageTitle>

<h4 class="mt-3">
    Configure groups
</h4>

<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <Card>
            @if (_groups is null || _categories is null)
            {
                <CardBody>
                    <p>Loading...</p>
                </CardBody>
            }
            else
            {
                <CardBody>
                    <DataGrid Responsive ShowPager Filterable Sortable TItem="GroupModel" Data="@_groups" Editable="false" EditMode="DataGridEditMode.Popup"
                        RowInserted="@GroupAddedAsync" RowUpdated="@GroupUpdatedAsync" PageSize="10" Striped="true" Bordered="true">
                        <DataGridCommandColumn TItem="GroupModel" DeleteCommandAllowed="false">
                            <NewCommandTemplate>
                                <DataGridNewCommand CommandContext="@context" />
                            </NewCommandTemplate>
                            <EditCommandTemplate>
                                <DataGridEditCommand TItem="GroupModel" CommandContext="@context" />
                            </EditCommandTemplate>
                            <SaveCommandTemplate>
                                <DataGridSaveCommand TItem="GroupModel" CommandContext="@context" />
                            </SaveCommandTemplate>
                            <CancelCommandTemplate>
                                <DataGridCancelCommand TItem="GroupModel" CommandContext="@context" />
                            </CancelCommandTemplate>
                        </DataGridCommandColumn>
                        <DataGridColumn TItem="GroupModel" Field="@nameof(GroupModel.Id)" Caption="Id"></DataGridColumn>
                        <DataGridColumn TItem="GroupModel" Field="@nameof(GroupModel.CategoryId)" Caption="Category">
                            <DisplayTemplate>
                                @{
                                    if (context is GroupModel model && model.CategoryId is not null)
                                    {
                                        @_categories[(int)model.CategoryId].Name
                                    }
                                    else
                                    {
                                        @("Unavailable")
                                    }
                                }
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="GroupModel" Field="@nameof(GroupModel.Title)" Caption="Title"></DataGridColumn>
                        <DataGridColumn TItem="GroupModel" Field="@nameof(GroupModel.NotificationChannelId)"
                            Caption="Notification Channel">
                            <DisplayTemplate>
                                @{
                                    if (context is GroupModel model)
                                    {
                                        @(model.NotificationChannelId ?? "None")
                                    }
                                }
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridCheckColumn TItem="GroupModel" Field="@nameof(GroupModel.IsLocked)" Caption="Locked"></DataGridCheckColumn>
                        <DataGridCheckColumn TItem="GroupModel" Field="@nameof(GroupModel.IsDeleted)" Caption="Deleted"></DataGridCheckColumn>
                        <DataGridDateColumn TItem="GroupModel" Field="@nameof(GroupModel.CreatedAt)" Caption="Created At" Editable="false"></DataGridDateColumn>
                        <DataGridDateColumn TItem="GroupModel" Field="@nameof(GroupModel.UpdatedAt)" Caption="Updated At" Editable="false"></DataGridDateColumn>
                    </DataGrid>
                </CardBody>
            }
        </Card>
    </Column>
</Row>
