@page "/groups"

@* In the future card sizes should automatically be scaled based on Intro size *@

<PageTitle>Groups | UnityNexus</PageTitle>

<h1>Groups</h1>

@if (_groups is null || _categories is null || _tags == null)
{
    <p>Loading...</p>
}
else
{
    <Row>
        <Column ColumnSize="ColumnSize.IsFull">
            <Card>
                <CardBody>
                    <ListGroup Flush="true">
                        @foreach (GroupModel group in _groups.OrderBy(g => g.Position).ThenBy(g => g.Category?.CategoryId).ThenBy(g =>g.Name))
                        {
                            <ListGroupItem Flex="Flex.Row.AlignItems.Center" Padding="Padding.Is4.OnY">
                                @if (!string.IsNullOrEmpty(group.LogoPath))
                                {
                                    <Image Source="@group.LogoPath" Alt="Group Logo" Style="width: 200px; height: 200px;"></Image>
                                }
                                <Div Flex="Flex.Column.JustifyContent.Around">
                                    <Div Flex="Flex.Column.JustifyContent.Center">
                                        @if (group.Category is not null)
                                        {
                                            <h3>@group.Category.Name</h3>
                                            <h5>@group.Name</h5>
                                        }
                                        else
                                        {
                                            <h3>@group.Name</h3>
                                        }
                                        @if (group.TagIds.Count > 0)
                                        {
                                            <Div Margin="Margin.Is1.OnY">
                                                @foreach (TagId tagId in group.TagIds.OrderBy(t => t))
                                                {
                                                    <Badge Color="Color.Info" Margin="Margin.Is1">@_tags[tagId].Content</Badge>
                                                }
                                            </Div>
                                        }
                                    </Div>
                                    <Div Margin="Margin.Is2.OnY">
                                        @group.Intro
                                    </Div>
                                    <Div>
                                        @if (group.IsLocked)
                                        {
                                            <Button Color="Color.Primary" Margin="Margin.Is2.FromTop" Disabled="@true">
                                                Locked <Icon Name="IconName.Lock"></Icon>
                                            </Button>
                                        }
                                        else
                                        {
                                            <Button Color="Color.Primary" Margin="Margin.Is2.FromTop">
                                                Apply <Icon Name="IconName.Pen"></Icon>
                                            </Button>
                                        }
                                    </Div>
                                </Div>
                            </ListGroupItem>
                        }
                    </ListGroup>
                </CardBody>
            </Card>
        </Column>
    </Row>
}
